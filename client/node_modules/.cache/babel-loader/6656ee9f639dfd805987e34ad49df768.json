{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ananthapadmanabhan G\\\\Desktop\\\\youtube-react-admin\\\\src\\\\pages\\\\Task\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./styles.css\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const data = [{\n    name: \"one\",\n    id: \"1\"\n  }, {\n    name: \"two\",\n    id: \"2\"\n  }, {\n    name: \"three\",\n    id: \"3\"\n  }, {\n    name: \"four\",\n    id: \"4\"\n  }, {\n    name: \"five\",\n    id: \"5\"\n  }];\n  const dataTwo = [{\n    name: \"six\",\n    id: \"6\"\n  }, {\n    name: \"seven\",\n    id: \"7\"\n  }, {\n    name: \"eight\",\n    id: \"8\"\n  }];\n  const [list, setList] = React.useState(data);\n  const [listTwo, setListTwo] = React.useState(dataTwo);\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const onEnd = result => {\n    console.log(result);\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      // we are dropping the item in the same list\n      const updatingList = result.destination.droppableId === \"12345678\" ? list : listTwo;\n      setList(reorder(updatingList, result.source.index, result.destination.index));\n    } else {// we are dropping the item in the other list\n      // const updatingList = result.destination.droppableId === \"12345678\" ? list : listTwo\n      // write the logic to update your list state for both droppable containers\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"12345678\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            children: [list.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: \"20px 0\",\n                    margin: \"20px 0\",\n                    background: \"yellow\"\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          marginLeft: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"012345678\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            children: [listTwo.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: \"20px 0\",\n                    margin: \"20px 0\",\n                    background: \"red\"\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 23\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nIOW4hv1J+9lmfMxsAN7zgiyo3g=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ananthapadmanabhan G/Desktop/youtube-react-admin/src/pages/Task/Task.js"],"names":["React","DragDropContext","Droppable","Draggable","App","data","name","id","dataTwo","list","setList","useState","listTwo","setListTwo","reorder","startIndex","endIndex","result","Array","from","removed","splice","onEnd","console","log","source","droppableId","destination","updatingList","index","display","width","provided","snapshot","innerRef","map","item","draggableProps","dragHandleProps","padding","margin","background","placeholder","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nexport default function App() {\r\n  const data = [\r\n    {\r\n      name: \"one\",\r\n      id: \"1\"\r\n    },\r\n    {\r\n      name: \"two\",\r\n      id: \"2\"\r\n    },\r\n    {\r\n      name: \"three\",\r\n      id: \"3\"\r\n    },\r\n    {\r\n      name: \"four\",\r\n      id: \"4\"\r\n    },\r\n    {\r\n      name: \"five\",\r\n      id: \"5\"\r\n    }\r\n  ];\r\n\r\n  const dataTwo = [\r\n    {\r\n      name: \"six\",\r\n      id: \"6\"\r\n    },\r\n    {\r\n      name: \"seven\",\r\n      id: \"7\"\r\n    },\r\n    {\r\n      name: \"eight\",\r\n      id: \"8\"\r\n    }\r\n  ];\r\n\r\n  const [list, setList] = React.useState(data);\r\n  const [listTwo, setListTwo] = React.useState(dataTwo);\r\n\r\n  const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  const onEnd = (result) => {\r\n    console.log(result);\r\n    if (result.source.droppableId === result.destination.droppableId) {\r\n      // we are dropping the item in the same list\r\n      const updatingList =\r\n        result.destination.droppableId === \"12345678\" ? list : listTwo;\r\n\r\n      setList(\r\n        reorder(updatingList, result.source.index, result.destination.index)\r\n      );\r\n    } else {\r\n      // we are dropping the item in the other list\r\n      // const updatingList = result.destination.droppableId === \"12345678\" ? list : listTwo\r\n      // write the logic to update your list state for both droppable containers\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onEnd}>\r\n      <div\r\n        style={{\r\n          display: \"flex\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"100%\"\r\n          }}\r\n        >\r\n          <Droppable droppableId=\"12345678\">\r\n            {(provided, snapshot) => (\r\n              <div ref={provided.innerRef}>\r\n                {list.map((item, index) => (\r\n                  <Draggable draggableId={item.id} key={item.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            padding: \"20px 0\",\r\n                            margin: \"20px 0\",\r\n                            background: \"yellow\"\r\n                          }}\r\n                        >\r\n                          {item.name}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            marginLeft: 20\r\n          }}\r\n        >\r\n          <Droppable droppableId=\"012345678\">\r\n            {(provided, snapshot) => (\r\n              <div ref={provided.innerRef}>\r\n                {listTwo.map((item, index) => (\r\n                  <Draggable draggableId={item.id} key={item.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            padding: \"20px 0\",\r\n                            margin: \"20px 0\",\r\n                            background: \"red\"\r\n                          }}\r\n                        >\r\n                          {item.name}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}