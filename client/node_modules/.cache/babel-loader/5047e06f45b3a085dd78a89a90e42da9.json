{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ananthapadmanabhan G\\\\Desktop\\\\youtube-react-admin\\\\src\\\\pages\\\\Task\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./Task.css\";\nimport react, { useEffect, useState } from \"react\";\nimport TaskEdit from \"../../components/modals/TaskAdd\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = () => {\n  _s();\n\n  const data = [{\n    name: \"one\",\n    id: \"1\"\n  }, {\n    name: \"two\",\n    id: \"2\"\n  }, {\n    name: \"three\",\n    id: \"3\"\n  }, {\n    name: \"four\",\n    id: \"4\"\n  }, {\n    name: \"five\",\n    id: \"5\"\n  }];\n  const dataTwo = [{\n    name: \"six\",\n    id: \"6\"\n  }, {\n    name: \"seven\",\n    id: \"7\"\n  }, {\n    name: \"eight\",\n    id: \"8\"\n  }];\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    loadProduct();\n  }, []);\n\n  const loadProduct = async () => {\n    await axios.get(\"http://localhost:3003/task\").then(res => {\n      setUsers(res.data);\n    });\n  };\n\n  const DeleteProduct = async id => {\n    await axios.delete(`http://localhost:3003/task/${id}`);\n    loadProduct();\n    setAnchorEl(null);\n  };\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [list, setList] = React.useState(data);\n  const [listTwo, setListTwo] = React.useState(dataTwo);\n\n  const reorder = (list, startIndex, endIndex) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  };\n\n  const onEnd = result => {\n    console.log(result);\n\n    if (result.source.droppableId === result.destination.droppableId) {\n      // we are dropping the item in the same list\n      const updatingList = result.destination.droppableId === \"12345678\" ? list : listTwo;\n      setList(reorder(updatingList, result.source.index, result.destination.index));\n    } else {// we are dropping the item in the other list\n      // const updatingList = result.destination.droppableId === \"12345678\" ? list : listTwo\n      // write the logic to update your list state for both droppable containers\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flex: \"4\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"12345678\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            children: [list.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: \"20px 0\",\n                    margin: \"20px 0\",\n                    background: \"yellow\"\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 8\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 6\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 5\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          marginLeft: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"012345678\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            children: [listTwo.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: item.id,\n              index: index,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    padding: \"20px 0\",\n                    margin: \"20px 0\",\n                    background: \"red\"\n                  },\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 8\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 6\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 5\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 2\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 2\n  }, this);\n};\n\n_s(Task, \"Jn3oddwquEurhsWIWu4XBubX1ro=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/Ananthapadmanabhan G/Desktop/youtube-react-admin/src/pages/Task/Task.js"],"names":["React","axios","react","useEffect","useState","TaskEdit","DragDropContext","Draggable","Droppable","Task","data","name","id","dataTwo","users","setUsers","loadProduct","get","then","res","DeleteProduct","delete","setAnchorEl","anchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","list","setList","listTwo","setListTwo","reorder","startIndex","endIndex","result","Array","from","removed","splice","onEnd","console","log","source","droppableId","destination","updatingList","index","display","flex","width","provided","snapshot","innerRef","map","item","draggableProps","dragHandleProps","padding","margin","background","placeholder","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Task.css\";\r\nimport react, { useEffect, useState } from \"react\";\r\nimport TaskEdit from \"../../components/modals/TaskAdd\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst Task = () => {\r\n\tconst data = [\r\n\t\t{\r\n\t\t  name: \"one\",\r\n\t\t  id: \"1\"\r\n\t\t},\r\n\t\t{\r\n\t\t  name: \"two\",\r\n\t\t  id: \"2\"\r\n\t\t},\r\n\t\t{\r\n\t\t  name: \"three\",\r\n\t\t  id: \"3\"\r\n\t\t},\r\n\t\t{\r\n\t\t  name: \"four\",\r\n\t\t  id: \"4\"\r\n\t\t},\r\n\t\t{\r\n\t\t  name: \"five\",\r\n\t\t  id: \"5\"\r\n\t\t}\r\n\t  ];\r\n\t\r\n\t  const dataTwo = [\r\n\t\t{\r\n\t\t  name: \"six\",\r\n\t\t  id: \"6\"\r\n\t\t},\r\n\t\t{\r\n\t\t  name: \"seven\",\r\n\t\t  id: \"7\"\r\n\t\t},\r\n\t\t{\r\n\t\t  name: \"eight\",\r\n\t\t  id: \"8\"\r\n\t\t}\r\n\t  ];\r\n  const [users, setUsers] = useState([]);\r\n  useEffect(() => {\r\n    loadProduct();\r\n  }, []);\r\n\r\n  const loadProduct = async () => {\r\n    await axios.get(\"http://localhost:3003/task\").then((res) => {\r\n      setUsers(res.data);\r\n    });\r\n  };\r\n\r\n  const DeleteProduct = async (id) => {\r\n    await axios.delete(`http://localhost:3003/task/${id}`);\r\n    loadProduct();\r\n    setAnchorEl(null);\r\n  };\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [list, setList] = React.useState(data);\r\n  const [listTwo, setListTwo] = React.useState(dataTwo);\r\n\r\n  const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n  };\r\n\r\n  const onEnd = (result) => {\r\n    console.log(result);\r\n    if (result.source.droppableId === result.destination.droppableId) {\r\n      // we are dropping the item in the same list\r\n      const updatingList =\r\n        result.destination.droppableId === \"12345678\" ? list : listTwo;\r\n\r\n      setList(\r\n        reorder(updatingList, result.source.index, result.destination.index)\r\n      );\r\n    } else {\r\n      // we are dropping the item in the other list\r\n      // const updatingList = result.destination.droppableId === \"12345678\" ? list : listTwo\r\n      // write the logic to update your list state for both droppable containers\r\n    }\r\n  };\r\n  return (\r\n\t\r\n\t<DragDropContext onDragEnd={onEnd}>\r\n\t<div\r\n\t  style={{\r\n\t\tdisplay: \"flex\",flex:\"4\"\r\n\t  }}\r\n\t>\r\n\t  <div\r\n\t\tstyle={{\r\n\t\t  width: \"100%\"\r\n\t\t}}\r\n\t  >\r\n\t\t<Droppable droppableId=\"12345678\">\r\n\t\t  {(provided, snapshot) => (\r\n\t\t\t<div ref={provided.innerRef}>\r\n\t\t\t  {list.map((item, index) => (\r\n\t\t\t\t<Draggable draggableId={item.id} key={item.id} index={index}>\r\n\t\t\t\t  {(provided, snapshot) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t  ref={provided.innerRef}\r\n\t\t\t\t\t  {...provided.draggableProps}\r\n\t\t\t\t\t  {...provided.dragHandleProps}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  <div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t  padding: \"20px 0\",\r\n\t\t\t\t\t\t  margin: \"20px 0\",\r\n\t\t\t\t\t\t  background: \"yellow\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t  >\r\n\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  )}\r\n\t\t\t\t</Draggable>\r\n\t\t\t  ))}\r\n\t\t\t  {provided.placeholder}\r\n\t\t\t</div>\r\n\t\t  )}\r\n\t\t</Droppable>\r\n\t  </div>\r\n\t  <div\r\n\t\tstyle={{\r\n\t\t  width: \"100%\",\r\n\t\t  marginLeft: 20\r\n\t\t}}\r\n\t  >\r\n\t\t<Droppable droppableId=\"012345678\">\r\n\t\t  {(provided, snapshot) => (\r\n\t\t\t<div ref={provided.innerRef}>\r\n\t\t\t  {listTwo.map((item, index) => (\r\n\t\t\t\t<Draggable draggableId={item.id} key={item.id} index={index}>\r\n\t\t\t\t  {(provided, snapshot) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t  ref={provided.innerRef}\r\n\t\t\t\t\t  {...provided.draggableProps}\r\n\t\t\t\t\t  {...provided.dragHandleProps}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  <div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t  padding: \"20px 0\",\r\n\t\t\t\t\t\t  margin: \"20px 0\",\r\n\t\t\t\t\t\t  background: \"red\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t  >\r\n\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  )}\r\n\t\t\t\t</Draggable>\r\n\t\t\t  ))}\r\n\t\t\t  {provided.placeholder}\r\n\t\t\t</div>\r\n\t\t  )}\r\n\t\t</Droppable>\r\n\t  </div>\r\n\t</div>\r\n  </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}