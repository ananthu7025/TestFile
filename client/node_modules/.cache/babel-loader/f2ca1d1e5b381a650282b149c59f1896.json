{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ananthapadmanabhan G\\\\Desktop\\\\youtube-react-admin\\\\src\\\\pages\\\\Task\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from \"axios\";\nimport './Task.css';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport react, { useEffect, useState } from \"react\";\nimport { Button, ButtonBase, Checkbox, FormLabel, Menu, MenuItem, TextField } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\nimport TaskEdit from '../../components/modals/TaskAdd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = () => {\n  _s();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const [task, setTask] = useState(\"\");\n  const [tasklist, setTaskList] = useState([]);\n\n  const handleChange = e => {\n    setTask(e.target.value);\n  };\n\n  const AddTask = () => {\n    if (task !== \"\") {\n      const taskDetails = {\n        id: Math.floor(Math.random() * 1000),\n        value: task,\n        isCompleted: false\n      };\n      setTaskList([...tasklist, taskDetails]);\n    }\n  };\n\n  const deletetask = (e, id) => {\n    e.preventDefault();\n    setTaskList(tasklist.filter(t => t.id != id));\n  };\n\n  let newArr = [];\n\n  const taskCompleted = (e, id) => {\n    e.preventDefault(); //let's find index of element\n\n    const element = tasklist.findIndex(elem => elem.id == id); //copy array into new variable\n\n    const newTaskList = [...tasklist]; //edit our element\n\n    newTaskList[element] = { ...newTaskList[element],\n      isCompleted: true\n    };\n    setTaskList(newTaskList);\n    newArr.push(newTaskList[element]);\n    setNewTaskArr(newArr);\n    console.log(newTaskArr);\n  };\n\n  const [newTaskArr, setNewTaskArr] = useState();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"head-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            class: \"breadcrumb\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: \"Dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"bx bx-chevron-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                class: \"active\",\n                href: \"#\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          class: \"btn-download\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"bx bxs-cloud-download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"text\",\n            children: \"Download PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"table-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"order\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"Tasker\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"head\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Task \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: \"14px\"\n                  },\n                  children: \"(in progress)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 6\n              }, this), /*#__PURE__*/_jsxDEV(TaskEdit, {\n                handleChange: handleChange,\n                AddTask: AddTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 6\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"bx bx-filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 6\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 5\n            }, this), tasklist !== [] ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              class: \"Tasker-list\",\n              children: tasklist.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: t.isCompleted ? \"not-completed\" : \"completed\",\n                children: [t.value, /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"completed\",\n                  onClick: e => taskCompleted(e, t.id),\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete\",\n                  onClick: e => deletetask(e, t.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 13\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 9\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"Tasker\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"head\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Task\", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: \"14px\"\n                },\n                children: \"(completed)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"bx bx-plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"bx bx-filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            class: \"Tasker-list\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              class: \"completed\",\n              children: [newArr.map((row, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: row.newArr\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 8\n              }, this)), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"bx bx-dots-vertical-rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 7\n              }, this)]\n            }, newTaskArr, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 2\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 2\n  }, this);\n};\n\n_s(Task, \"2kar8vH+oSmUAMI6gvPI+HRpiBg=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/Ananthapadmanabhan G/Desktop/youtube-react-admin/src/pages/Task/Task.js"],"names":["React","axios","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","react","useEffect","useState","Button","ButtonBase","Checkbox","FormLabel","Menu","MenuItem","TextField","Link","TaskEdit","Task","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","task","setTask","tasklist","setTaskList","handleChange","e","target","value","AddTask","taskDetails","id","Math","floor","random","isCompleted","deletetask","preventDefault","filter","t","newArr","taskCompleted","element","findIndex","elem","newTaskList","push","setNewTaskArr","console","log","newTaskArr","fontSize","map","row","index"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport axios from \"axios\";\r\nimport './Task.css'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport react, { useEffect, useState } from \"react\";\r\nimport { Button, ButtonBase, Checkbox, FormLabel, Menu, MenuItem, TextField } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport TaskEdit from '../../components/modals/TaskAdd';\r\nconst Task = () => {\r\n\t\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\tconst [task, setTask] = useState(\"\");\r\n  const [tasklist, setTaskList] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    setTask(e.target.value);\r\n  };\r\n\r\n  const AddTask = () => {\r\n    if (task !== \"\") {\r\n      const taskDetails = {\r\n        id: Math.floor(Math.random() * 1000),\r\n        value: task,\r\n        isCompleted: false,\r\n      };\r\n\r\n      setTaskList([...tasklist, taskDetails]);\r\n    }\r\n  };\r\n\r\n  const deletetask = (e, id) => {\r\n    e.preventDefault();\r\n    setTaskList(tasklist.filter((t) => t.id != id));\r\n  };\r\nlet newArr=[]\r\n  const taskCompleted = (e, id) => {\r\n    e.preventDefault();\r\n    //let's find index of element\r\n    const element = tasklist.findIndex((elem) => elem.id == id);\r\n\r\n    //copy array into new variable\r\n    const newTaskList = [...tasklist];\r\n\r\n    //edit our element\r\n    newTaskList[element] = {\r\n      ...newTaskList[element],\r\n      isCompleted: true,\r\n    };\r\n\r\n    setTaskList(newTaskList);\r\n\tnewArr.push(newTaskList[element])\r\n\t\r\n\tsetNewTaskArr(newArr)\r\n\tconsole.log(newTaskArr)\r\n\r\n  };\r\n\tconst[newTaskArr,setNewTaskArr]=useState()\r\n\r\n  return (\r\n    \r\n\t<section id=\"content\">\t\r\n\t<main>\r\n\t\t<div class=\"head-title\">\r\n\t\t\t<div class=\"left\">\r\n\t\t\t\t<h1>Dashboard</h1>\r\n\t\t\t\t<ul class=\"breadcrumb\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href=\"#\">Dashboard</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li><i class='bx bx-chevron-right' ></i></li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a class=\"active\" href=\"#\">Home</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<a href=\"#\" class=\"btn-download\">\r\n\t\t\t\t<i class='bx bxs-cloud-download' ></i>\r\n\t\t\t\t<span class=\"text\">Download PDF</span>\r\n\t\t\t</a>\r\n\t\t</div>\r\n\r\n\t\t\r\n\r\n\t\t<div class=\"table-data\">\r\n\t\t\t<div class=\"order\">\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"Tasker\">\r\n\t\t\t\t<div class=\"head\">\r\n\t\t\t\t\t<h3>Task <span style={{fontSize:\"14px\"}}>(in progress)</span></h3>\r\n\t\t\t\t\t<TaskEdit handleChange={handleChange} AddTask={AddTask}/>\r\n\t\t\t\t\t<i class='bx bx-filter' ></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t{tasklist !== [] ? (\r\n        <ul class=\"Tasker-list\">\r\n          {tasklist.map((t) => (\r\n            <li className={t.isCompleted ? \"not-completed\" : \"completed\"}>\r\n              {t.value}\r\n              <button\r\n                className=\"completed\"\r\n                onClick={(e) => taskCompleted(e, t.id)}\r\n              >\r\n                Completed\r\n              </button>\r\n\r\n              <button className=\"delete\" onClick={(e) => deletetask(e, t.id)}>\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n\t\t\t</div>\r\n\r\n\t  \r\n\t\r\n  \r\n\t\t\t</div>\r\n\t\t\t<div class=\"Tasker\">\r\n\t\t\t\t<div class=\"head\">\r\n\t\t\t\t\t<h3>Task<span style={{fontSize:\"14px\"}}>(completed)</span></h3>\r\n\t\t\t\t\t<i class='bx bx-plus' ></i>\r\n\t\t\t\t\t<i class='bx bx-filter' ></i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ul class=\"Tasker-list\">\r\n\t\t\t\t\t<li key={newTaskArr} class=\"completed\">\r\n\t\t\t\t\t\t{newArr.map((row,index)=>(\r\n\t\t\t\t\t\t\t<li key={index}>{row.newArr}</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t<i class='bx bx-dots-vertical-rounded' ></i>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</main>\r\n</section>\r\n  )\r\n}\r\n\r\nexport default Task"]},"metadata":{},"sourceType":"module"}