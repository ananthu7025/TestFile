{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ananthapadmanabhan G\\\\Desktop\\\\youtube-react-admin\\\\src\\\\components\\\\chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./chart.css\";\nimport { LineChart, Line, XAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart({\n  title,\n  dataKey,\n  grid\n}) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const labels = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n  const options = {\n    fillColor: '#FFFFFF',\n    strokeColor: '#0000FF'\n  };\n  useEffect(() => {\n    const salary = [];\n    axios.get(\"http://localhost:3003/task\").then(response => {\n      console.log(\"response\", response);\n      response.data.data.map(item => {\n        console.log(\"item\", item);\n        salary.push(item.employee_salary);\n      });\n      setData(salary);\n      console.log(\"salary\", salary);\n    }).catch(e => {\n      alert(e);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chartTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      aspect: 4 / 1,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\",\n          stroke: \"#5550bd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: dataKey,\n          stroke: \"#5550bd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), grid && /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          stroke: \"#e0dfdf\",\n          strokeDasharray: \"5 5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/Ananthapadmanabhan G/Desktop/youtube-react-admin/src/components/chart/Chart.jsx"],"names":["LineChart","Line","XAxis","CartesianGrid","Tooltip","ResponsiveContainer","useState","useEffect","axios","Chart","title","dataKey","grid","data","setData","labels","options","fillColor","strokeColor","salary","get","then","response","console","log","map","item","push","employee_salary","catch","e","alert"],"mappings":";;;AAAA,OAAO,aAAP;AACA,SACEA,SADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,aAJF,EAKEC,OALF,EAMEC,mBANF,QAOO,UAPP;AAQA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAf,EAAyC;AAAA;;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMS,MAAM,GAAG,CAAE,KAAF,EAAS,KAAT,EAAgB,OAAhB,EAAwB,OAAxB,EAAiC,KAAjC,EAAwC,MAAxC,EAAgD,MAAhD,EAAuD,KAAvD,EAA6D,MAA7D,EAAoE,KAApE,EAA0E,KAA1E,EAAgF,KAAhF,CAAf;AACE,QAAMC,OAAO,GAAG;AAAEC,IAAAA,SAAS,EAAE,SAAb;AAAwBC,IAAAA,WAAW,EAAE;AAArC,GAAhB;AACFX,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,MAAM,GAAG,EAAf;AAEAX,IAAAA,KAAK,CAACY,GAAN,CAAU,4BAAV,EAAwCC,IAAxC,CAA6CC,QAAQ,IAAG;AACpDC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACAA,MAAAA,QAAQ,CAACT,IAAT,CAAcA,IAAd,CAAmBY,GAAnB,CAAuBC,IAAI,IAAI;AAC7BH,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,IAApB;AACEP,QAAAA,MAAM,CAACQ,IAAP,CAAYD,IAAI,CAACE,eAAjB;AACH,OAHD;AAIAd,MAAAA,OAAO,CAACK,MAAD,CAAP;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,MAAtB;AACH,KARD,EAQGU,KARH,CAQSC,CAAC,IAAI;AACVC,MAAAA,KAAK,CAACD,CAAD,CAAL;AACH,KAVD;AAWH,GAdQ,EAcN,EAdM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAA4BpB;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,MAAM,EAAE,IAAI,CAA9C;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEG,IAAjB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,MAAf;AAAsB,UAAA,MAAM,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,UAAX;AAAsB,UAAA,OAAO,EAAEF,OAA/B;AAAwC,UAAA,MAAM,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIGC,IAAI,iBAAI,QAAC,aAAD;AAAe,UAAA,MAAM,EAAC,SAAtB;AAAgC,UAAA,eAAe,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAhCuBH,K;;KAAAA,K","sourcesContent":["import \"./chart.css\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { useState,useEffect } from \"react\";\nimport axios from \"axios\";\nexport default function Chart({ title, dataKey, grid }) {\n  const [data, setData] = useState([])\n  const labels = [ \"Jan\", \"Feb\", \"March\",\"April\", \"May\", \"June\", \"July\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"]\n    const options = { fillColor: '#FFFFFF', strokeColor: '#0000FF' };\n  useEffect(() => {\n      const salary = [];\n     \n      axios.get(\"http://localhost:3003/task\").then(response =>{\n          console.log(\"response\", response)\n          response.data.data.map(item => {\n            console.log(\"item\", item)\n              salary.push(item.employee_salary);            \n          })\n          setData(salary)\n          console.log(\"salary\", salary)\n      }).catch(e => {\n          alert(e);\n      })\n  }, [])\n  return (\n    <div className=\"chart\">\n      <h3 className=\"chartTitle\">{title}</h3>\n      <ResponsiveContainer width=\"100%\" aspect={4 / 1}>\n        <LineChart data={data}>\n          <XAxis dataKey=\"name\" stroke=\"#5550bd\" />\n          <Line type=\"monotone\" dataKey={dataKey} stroke=\"#5550bd\" />\n          <Tooltip />\n          {grid && <CartesianGrid stroke=\"#e0dfdf\" strokeDasharray=\"5 5\" />}\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}