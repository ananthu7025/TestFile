{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ananthapadmanabhan G\\\\Desktop\\\\youtube-react-admin\\\\src\\\\components\\\\chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n  const [employeeSalary, setEmployeeSalary] = useState([]);\n  const [employeeAge, setEmployeeAge] = useState([]);\n\n  const chart = () => {\n    let empSal = [];\n    let empAge = [];\n    axios.get(\"http://dummy.restapiexample.com/api/v1/employees\").then(res => {\n      console.log(res);\n\n      for (const dataObj of res.data.data) {\n        empSal.push(parseInt(dataObj.employee_salary));\n        empAge.push(parseInt(dataObj.employee_age));\n      }\n\n      setChartData({\n        labels: empAge,\n        datasets: [{\n          label: \"level of thiccness\",\n          data: empSal,\n          backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n          borderWidth: 4\n        }]\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(empSal, empAge);\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dankmemes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true,\n          title: {\n            text: \"THICCNESS SCALE\",\n            display: true\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                autoSkip: true,\n                maxTicksLimit: 10,\n                beginAtZero: true\n              },\n              gridLines: {\n                display: false\n              }\n            }],\n            xAxes: [{\n              gridLines: {\n                display: false\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"6/5/3E9mKoSupMI2jXuIDDeJqao=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/Ananthapadmanabhan G/Desktop/youtube-react-admin/src/components/chart/Chart.jsx"],"names":["React","useState","useEffect","Line","axios","Chart","chartData","setChartData","employeeSalary","setEmployeeSalary","employeeAge","setEmployeeAge","chart","empSal","empAge","get","then","res","console","log","dataObj","data","push","parseInt","employee_salary","employee_age","labels","datasets","label","backgroundColor","borderWidth","catch","err","responsive","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMW,KAAK,GAAG,MAAM;AAClB,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,MAAM,GAAG,EAAb;AACAV,IAAAA,KAAK,CACFW,GADH,CACO,kDADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,WAAK,MAAMG,OAAX,IAAsBH,GAAG,CAACI,IAAJ,CAASA,IAA/B,EAAqC;AACnCR,QAAAA,MAAM,CAACS,IAAP,CAAYC,QAAQ,CAACH,OAAO,CAACI,eAAT,CAApB;AACAV,QAAAA,MAAM,CAACQ,IAAP,CAAYC,QAAQ,CAACH,OAAO,CAACK,YAAT,CAApB;AACD;;AACDlB,MAAAA,YAAY,CAAC;AACXmB,QAAAA,MAAM,EAAEZ,MADG;AAEXa,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,oBADT;AAEEP,UAAAA,IAAI,EAAER,MAFR;AAGEgB,UAAAA,eAAe,EAAE,CAAC,yBAAD,CAHnB;AAIEC,UAAAA,WAAW,EAAE;AAJf,SADQ;AAFC,OAAD,CAAZ;AAWD,KAnBH,EAoBGC,KApBH,CAoBSC,GAAG,IAAI;AACZd,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACD,KAtBH;AAuBAd,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ,EAAoBC,MAApB;AACD,GA3BD;;AA6BAZ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK;AACN,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,IAAI,EAAEN,SADR;AAEE,QAAA,OAAO,EAAE;AACP2B,UAAAA,UAAU,EAAE,IADL;AAEPC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAE,iBAAR;AAA2BC,YAAAA,OAAO,EAAE;AAApC,WAFA;AAGPC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,CACL;AACEC,cAAAA,KAAK,EAAE;AACLC,gBAAAA,QAAQ,EAAE,IADL;AAELC,gBAAAA,aAAa,EAAE,EAFV;AAGLC,gBAAAA,WAAW,EAAE;AAHR,eADT;AAMEC,cAAAA,SAAS,EAAE;AACTP,gBAAAA,OAAO,EAAE;AADA;AANb,aADK,CADD;AAaNQ,YAAAA,KAAK,EAAE,CACL;AACED,cAAAA,SAAS,EAAE;AACTP,gBAAAA,OAAO,EAAE;AADA;AADb,aADK;AAbD;AAHD;AAFX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAxED;;GAAM/B,K;;KAAAA,K;AA0EN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst Chart = () => {\n  const [chartData, setChartData] = useState({});\n  const [employeeSalary, setEmployeeSalary] = useState([]);\n  const [employeeAge, setEmployeeAge] = useState([]);\n\n  const chart = () => {\n    let empSal = [];\n    let empAge = [];\n    axios\n      .get(\"http://dummy.restapiexample.com/api/v1/employees\")\n      .then(res => {\n        console.log(res);\n        for (const dataObj of res.data.data) {\n          empSal.push(parseInt(dataObj.employee_salary));\n          empAge.push(parseInt(dataObj.employee_age));\n        }\n        setChartData({\n          labels: empAge,\n          datasets: [\n            {\n              label: \"level of thiccness\",\n              data: empSal,\n              backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n              borderWidth: 4\n            }\n          ]\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    console.log(empSal, empAge);\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return (\n    <div className=\"App\">\n      <h1>Dankmemes</h1>\n      <div>\n        <Line\n          data={chartData}\n          options={{\n            responsive: true,\n            title: { text: \"THICCNESS SCALE\", display: true },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    autoSkip: true,\n                    maxTicksLimit: 10,\n                    beginAtZero: true\n                  },\n                  gridLines: {\n                    display: false\n                  }\n                }\n              ],\n              xAxes: [\n                {\n                  gridLines: {\n                    display: false\n                  }\n                }\n              ]\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}