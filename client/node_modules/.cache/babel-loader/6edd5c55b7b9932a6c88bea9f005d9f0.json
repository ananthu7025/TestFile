{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ananthapadmanabhan G\\\\Desktop\\\\youtube-react-admin\\\\src\\\\components\\\\chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./chart.css\";\nimport { LineChart, Line, XAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport Histogram from 'react-chart-histogram';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart({\n  title,\n  dataKey,\n  grid\n}) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [date, setDate] = useState([]);\n  const labels = [];\n  const options = {\n    fillColor: '#FFFFFF',\n    strokeColor: '#0000FF'\n  };\n  useEffect(() => {\n    const salary = [];\n    axios.get(\"http://localhost:3003/task\").then(response => {\n      console.log(\"response\", response);\n      response.data.map(item => {\n        salary.push(item.time);\n        labels.push(item.name);\n      });\n      setDate(labels);\n      console.log(labels);\n      console.log(salary);\n    }).catch(e => {\n      alert(e);\n    });\n  }, []);\n  useEffect(() => {\n    const salary = [];\n    axios.get(\"http://localhost:3003/task\").then(response => {\n      console.log(\"response\", response);\n      response.data.map(item => {\n        salary.push(item.time);\n        labels.push(item.name);\n      });\n      setData(salary);\n      console.log(labels);\n      console.log(salary);\n    }).catch(e => {\n      alert(e);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chartTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      aspect: 4 / 1,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Histogram, {\n          xLabels: labels,\n          yValues: data,\n          width: \"1000px\",\n          height: \"500px\",\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"1mBHZgtifqz2gRGWm58bEr5Nwn8=\");\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/Ananthapadmanabhan G/Desktop/youtube-react-admin/src/components/chart/Chart.jsx"],"names":["LineChart","Line","XAxis","CartesianGrid","Tooltip","ResponsiveContainer","Histogram","useState","useEffect","axios","Chart","title","dataKey","grid","data","setData","date","setDate","labels","options","fillColor","strokeColor","salary","get","then","response","console","log","map","item","push","time","name","catch","e","alert"],"mappings":"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","sourcesContent":["import \"./chart.css\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport Histogram from 'react-chart-histogram';\n\nimport { useState,useEffect } from \"react\";\nimport axios from \"axios\";\nexport default function Chart({ title, dataKey, grid }) {\n  const [data, setData] = useState([])\n  const [date, setDate] = useState([])\n\n  const labels = [ ]\n    const options = { fillColor: '#FFFFFF', strokeColor: '#0000FF' };\n    useEffect(() => {\n      const salary = [];\n     \n      axios.get(\"http://localhost:3003/task\").then(response =>{\n          console.log(\"response\", response)\n          response.data.map(item => {\n              salary.push(item.time);\n              labels.push(item.name)            \n          })\n          setDate(labels)\n          console.log(labels)\n          console.log(salary)\n\n      }).catch(e => {\n          alert(e);\n      })\n  }, [])\n  useEffect(() => {\n      const salary = [];\n     \n      axios.get(\"http://localhost:3003/task\").then(response =>{\n          console.log(\"response\", response)\n          response.data.map(item => {\n              salary.push(item.time);\n              labels.push(item.name)            \n          })\n          setData(salary)\n          console.log(labels)\n          console.log(salary)\n\n      }).catch(e => {\n          alert(e);\n      })\n  }, [])\n\n  return (\n    <div className=\"chart\">\n      <h3 className=\"chartTitle\">{title}</h3>\n      <ResponsiveContainer width=\"100%\" aspect={4/1}>\n      <div>\n      <Histogram\n          xLabels={labels}\n          yValues={data}\n          width='1000px'\n          height='500px'\n          options={options}\n      />\n    </div>\n    </ResponsiveContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}