{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ananthapadmanabhan G\\\\Desktop\\\\youtube-react-admin\\\\src\\\\components\\\\chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport react, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst Chart = () => {\n  _s();\n\n  const [chart, setChart] = useState({});\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    loadProduct();\n  }, []);\n\n  const loadProduct = async () => {\n    await axios.get(\"http://localhost:3003/task\").then(res => {\n      setUsers(res.data);\n      setChart(JSON.stringify(setChart(res.data)));\n    });\n  };\n\n  console.log(\"chart\", chart);\n  var data = {\n    labels: users === null || users === void 0 ? void 0 : users.map(x => x.name),\n    datasets: [{\n      label: `${users === null || users === void 0 ? void 0 : users.length} Total Task`,\n      data: users === null || users === void 0 ? void 0 : users.map(x => x.time),\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n      borderWidth: 1\n    }]\n  };\n  var options = {\n    maintainAspectRatio: false,\n    scales: {},\n    legend: {\n      labels: {\n        fontSize: 25\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      height: 400,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"olu0b1FI7gqxxbT40nwmbcfftCM=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/Ananthapadmanabhan G/Desktop/youtube-react-admin/src/components/chart/Chart.jsx"],"names":["axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","react","useEffect","useState","Line","register","chart","setChart","users","setUsers","loadProduct","get","then","res","data","JSON","stringify","console","log","labels","map","x","name","datasets","label","length","time","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","legend","fontSize"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,QASO,UATP;AAUA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;AACAX,OAAO,CAACY,QAAR,CACEX,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF;;AASA,MAAMR,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,WAAW,GAAG,YAAY;AAC9B,UAAMnB,KAAK,CAACoB,GAAN,CAAU,4BAAV,EAAwCC,IAAxC,CAA8CC,GAAD,IAAS;AAC1DJ,MAAAA,QAAQ,CAACI,GAAG,CAACC,IAAL,CAAR;AACAP,MAAAA,QAAQ,CAACQ,IAAI,CAACC,SAAL,CAAeT,QAAQ,CAACM,GAAG,CAACC,IAAL,CAAvB,CAAD,CAAR;AACD,KAHK,CAAN;AAID,GALD;;AAMAG,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,KAArB;AACA,MAAIQ,IAAI,GAAG;AACTK,IAAAA,MAAM,EAAEX,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEY,GAAP,CAAYC,CAAD,IAAOA,CAAC,CAACC,IAApB,CADC;AAETC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAG,GAAEhB,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEiB,MAAO,aAD1B;AAEEX,MAAAA,IAAI,EAAEN,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEY,GAAP,CAAYC,CAAD,IAAOA,CAAC,CAACK,IAApB,CAFR;AAGEC,MAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,EAKf,0BALe,EAMf,yBANe,CAHnB;AAWEC,MAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,EAKX,wBALW,EAMX,uBANW,CAXf;AAmBEC,MAAAA,WAAW,EAAE;AAnBf,KADQ;AAFD,GAAX;AA2BA,MAAIC,OAAO,GAAG;AACZC,IAAAA,mBAAmB,EAAE,KADT;AAEZC,IAAAA,MAAM,EAAE,EAFI;AAGZC,IAAAA,MAAM,EAAE;AACNd,MAAAA,MAAM,EAAE;AACNe,QAAAA,QAAQ,EAAE;AADJ;AADF;AAHI,GAAd;AAUA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEpB,IAAZ;AAAkB,MAAA,MAAM,EAAE,GAA1B;AAA+B,MAAA,OAAO,EAAEgB;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvDD;;GAAMtC,K;;KAAAA,K;AAwDN,eAAeA,KAAf","sourcesContent":["import axios from \"axios\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport react, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\nconst Chart = () => {\n  const [chart, setChart] = useState({});\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    loadProduct();\n  }, []);\n  const loadProduct = async () => {\n    await axios.get(\"http://localhost:3003/task\").then((res) => {\n      setUsers(res.data);\n      setChart(JSON.stringify(setChart(res.data)));\n    });\n  };\n  console.log(\"chart\", chart);\n  var data = {\n    labels: users?.map((x) => x.name),\n    datasets: [\n      {\n        label: `${users?.length} Total Task`,\n        data: users?.map((x) => x.time),\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  var options = {\n    maintainAspectRatio: false,\n    scales: {},\n    legend: {\n      labels: {\n        fontSize: 25,\n      },\n    },\n  };\n\n  return (\n    <div>\n      <Line data={data} height={400} options={options} />\n    </div>\n  );\n};\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}