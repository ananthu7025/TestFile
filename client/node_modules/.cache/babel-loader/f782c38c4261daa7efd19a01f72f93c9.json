{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ananthapadmanabhan G\\\\Desktop\\\\youtube-react-admin\\\\src\\\\pages\\\\Task\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dnd() {\n  _s();\n\n  // Initial groups to drag between\n  const groups = [\"group1\", \"group2\", \"group3\", \"noDrop\"]; // Initial items to be dragged\n\n  const initialItems = [{\n    id: 1,\n    group: \"group1\",\n    value: \"drag 1\"\n  }, {\n    id: 2,\n    group: \"group1\",\n    value: \"drag 2\"\n  }, {\n    id: 3,\n    group: \"group1\",\n    value: \"drag 3\"\n  }]; // Sets the state of the items.\n  // Can be used to add items\n\n  const [items, setItems] = useState(initialItems); // Data about a things id, origin, and destination\n\n  const [dragData, setDragData] = useState({}); // Are we hovering over the noDrop div?\n\n  const [noDrop, setNoDrop] = useState(\"\"); // Add a new item to `items`\n\n  const addItem = () => {\n    const newItem = {\n      id: items.length + 1,\n      group: \"group1\",\n      value: `drag ${items.length + 1}`\n    };\n    const newItems = [...items, newItem];\n    setItems(newItems);\n  };\n\n  const reset = () => {\n    setItems(initialItems);\n  }; // onDragStart we setDragData.\n  // useState instead of e.dataTransfer so we can transfer more data\n\n\n  const handleDragStart = (e, id, group) => {\n    setDragData({\n      id: id,\n      initialGroup: group\n    });\n  }; // If we enter the noDrop zone the state will be updated\n  // Used for styling.\n\n\n  const handleDragEnter = (e, group) => {\n    if (group === \"noDrop\") {\n      setNoDrop(\"noDrop\");\n    }\n  }; // DND will not work without this.\n\n\n  const handleDragOver = e => {\n    e.preventDefault();\n  }; // setNoDrop to nothing to return styling to normal\n\n\n  const handleDragLeave = e => {\n    setNoDrop(\"\");\n  }; // 1. makes copy of items (newItems)\n  // 2. changes category of the item to its new group\n  // 3. setItem to our NewItems\n\n\n  const changeCategory = (itemId, group) => {\n    const newItems = [...items];\n    newItems[itemId - 1].group = group;\n    setItems([...newItems]);\n  }; // 1. setNoDrop in case item was dropped in noDrop\n  // 2. gets the item id\n  // 3. doesn't allow drop in noDrop\n  // 4. changeCategory (see above)\n\n\n  const handleDrop = (e, group) => {\n    setNoDrop(\"\");\n    const selected = dragData.id;\n\n    if (group === \"noDrop\") {\n      console.log(\"nuh uh\");\n    } else {\n      changeCategory(selected, group);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addItem(),\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => reset(),\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groups\",\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        // change styling if dragging into noDrop zone\n        className: `${group === \"noDrop\" && noDrop === \"noDrop\" ? noDrop : \"group\"}` // event handlers\n        ,\n        onDragEnter: e => handleDragEnter(e, group),\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        onDrop: e => handleDrop(e, group),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: group\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: items.filter(item => item.group === group).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            id: item.id // change style if dragged over noDrop\n            ,\n            className: `${group === \"noDrop\" && noDrop === \"noDrop\" ? \"notAllowed\" : \"item\"}` // MAKES THE ITEM DRAGGABLE!!!!\n            ,\n            draggable: true // event handler\n            ,\n            onDragStart: e => handleDragStart(e, item.id, group),\n            children: item.value\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, group, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dnd, \"+S7/06JOWUaqbLn74TrdtiFwRHg=\");\n\n_c = Dnd;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dnd\");","map":{"version":3,"sources":["C:/Users/Ananthapadmanabhan G/Desktop/youtube-react-admin/src/pages/Task/Task.js"],"names":["React","useState","Dnd","groups","initialItems","id","group","value","items","setItems","dragData","setDragData","noDrop","setNoDrop","addItem","newItem","length","newItems","reset","handleDragStart","e","initialGroup","handleDragEnter","handleDragOver","preventDefault","handleDragLeave","changeCategory","itemId","handleDrop","selected","console","log","flex","map","filter","item"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport './Task.css'\r\n\r\nexport default function Dnd() {\r\n  // Initial groups to drag between\r\n  const groups = [\"group1\", \"group2\", \"group3\", \"noDrop\"];\r\n  // Initial items to be dragged\r\n  const initialItems = [\r\n    { id: 1, group: \"group1\", value: \"drag 1\" },\r\n    { id: 2, group: \"group1\", value: \"drag 2\" },\r\n    { id: 3, group: \"group1\", value: \"drag 3\" }\r\n  ];\r\n  // Sets the state of the items.\r\n  // Can be used to add items\r\n  const [items, setItems] = useState(initialItems);\r\n  // Data about a things id, origin, and destination\r\n  const [dragData, setDragData] = useState({});\r\n  // Are we hovering over the noDrop div?\r\n  const [noDrop, setNoDrop] = useState(\"\");\r\n\r\n  // Add a new item to `items`\r\n  const addItem = () => {\r\n    const newItem = {\r\n      id: items.length + 1,\r\n      group: \"group1\",\r\n      value: `drag ${items.length + 1}`\r\n    };\r\n    const newItems = [...items, newItem];\r\n    setItems(newItems);\r\n  };\r\n\r\n  const reset = () => {\r\n    setItems(initialItems);\r\n  };\r\n\r\n  // onDragStart we setDragData.\r\n  // useState instead of e.dataTransfer so we can transfer more data\r\n  const handleDragStart = (e, id, group) => {\r\n    setDragData({ id: id, initialGroup: group });\r\n  };\r\n\r\n  // If we enter the noDrop zone the state will be updated\r\n  // Used for styling.\r\n  const handleDragEnter = (e, group) => {\r\n    if (group === \"noDrop\") {\r\n      setNoDrop(\"noDrop\");\r\n    }\r\n  };\r\n\r\n  // DND will not work without this.\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  // setNoDrop to nothing to return styling to normal\r\n  const handleDragLeave = (e) => {\r\n    setNoDrop(\"\");\r\n  };\r\n\r\n  // 1. makes copy of items (newItems)\r\n  // 2. changes category of the item to its new group\r\n  // 3. setItem to our NewItems\r\n  const changeCategory = (itemId, group) => {\r\n    const newItems = [...items];\r\n    newItems[itemId - 1].group = group;\r\n    setItems([...newItems]);\r\n  };\r\n\r\n  // 1. setNoDrop in case item was dropped in noDrop\r\n  // 2. gets the item id\r\n  // 3. doesn't allow drop in noDrop\r\n  // 4. changeCategory (see above)\r\n  const handleDrop = (e, group) => {\r\n    setNoDrop(\"\");\r\n    const selected = dragData.id;\r\n    if (group === \"noDrop\") {\r\n      console.log(\"nuh uh\");\r\n    } else {\r\n      changeCategory(selected, group);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{flex:4}}>\r\n        {/* Add to / Reset state */}\r\n        <button onClick={() => addItem()}>Add Item</button>\r\n        <button onClick={() => reset()}>Reset</button>\r\n      </div>\r\n      <div className=\"groups\">\r\n        {/* iterate over groups */}\r\n        {groups.map((group) => (\r\n          <div\r\n            // change styling if dragging into noDrop zone\r\n            className={`${\r\n              group === \"noDrop\" && noDrop === \"noDrop\" ? noDrop : \"group\"\r\n            }`}\r\n            // event handlers\r\n            onDragEnter={(e) => handleDragEnter(e, group)}\r\n            onDragOver={handleDragOver}\r\n            onDragLeave={handleDragLeave}\r\n            onDrop={(e) => handleDrop(e, group)}\r\n            key={group}\r\n          >\r\n            <h1 className=\"title\">{group}</h1>\r\n            <div>\r\n              {/* iterate over items */}\r\n              {items\r\n                .filter((item) => item.group === group)\r\n                .map((item) => (\r\n                  <div\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    // change style if dragged over noDrop\r\n                    className={`${\r\n                      group === \"noDrop\" && noDrop === \"noDrop\"\r\n                        ? \"notAllowed\"\r\n                        : \"item\"\r\n                    }`}\r\n                    // MAKES THE ITEM DRAGGABLE!!!!\r\n                    draggable\r\n                    // event handler\r\n                    onDragStart={(e) => handleDragStart(e, item.id, group)}\r\n                  >\r\n                    {/* The name of each item */}\r\n                    {item.value}\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}