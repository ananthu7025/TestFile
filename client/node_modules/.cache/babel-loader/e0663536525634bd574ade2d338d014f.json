{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ananthapadmanabhan G\\\\Desktop\\\\youtube-react-admin\\\\src\\\\components\\\\chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport { LineChart, PieChart, Pie, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area, BarChart, Bar } from \"recharts\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Histogram from 'react-chart-histogram';\nimport './chart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const labels = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n  const options = {\n    fillColor: '#FFFFFF',\n    strokeColor: '#0000FF'\n  };\n  useEffect(() => {\n    const salary = [];\n    axios.get(\"http://localhost:3003/task\").then(response => {\n      console.log(\"response\", response);\n      response.data.map(item => {\n        console.log(\"item\", item);\n        salary.push(item.name);\n      });\n      setData(salary);\n      console.log(\"salary\", salary);\n    }).catch(e => {\n      alert(e);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 500,\n      height: 300,\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"pv\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"uv\",\n        fill: \"#82ca9d\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ananthapadmanabhan G/Desktop/youtube-react-admin/src/components/chart/Chart.jsx"],"names":["LineChart","PieChart","Pie","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","AreaChart","Area","BarChart","Bar","useState","useEffect","axios","Histogram","App","data","setData","labels","options","fillColor","strokeColor","salary","get","then","response","console","log","map","item","push","name","catch","e","alert","top","right","left","bottom"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyCC,KAAzC,EAAgDC,KAAhD,EAAuDC,aAAvD,EAAsEC,OAAtE,EAA+EC,MAA/E,EAAuFC,mBAAvF,EAA4GC,SAA5G,EAAuHC,IAAvH,EAA6HC,QAA7H,EAAuIC,GAAvI,QAAkJ,UAAlJ;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAO,aAAP;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMO,MAAM,GAAG,CAAE,KAAF,EAAS,KAAT,EAAgB,OAAhB,EAAwB,OAAxB,EAAiC,KAAjC,EAAwC,MAAxC,EAAgD,MAAhD,EAAuD,KAAvD,EAA6D,MAA7D,EAAoE,KAApE,EAA0E,KAA1E,EAAgF,KAAhF,CAAf;AACE,QAAMC,OAAO,GAAG;AAAEC,IAAAA,SAAS,EAAE,SAAb;AAAwBC,IAAAA,WAAW,EAAE;AAArC,GAAhB;AACFT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,MAAM,GAAG,EAAf;AAEAT,IAAAA,KAAK,CAACU,GAAN,CAAU,4BAAV,EAAwCC,IAAxC,CAA6CC,QAAQ,IAAG;AACpDC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACAA,MAAAA,QAAQ,CAACT,IAAT,CAAcY,GAAd,CAAkBC,IAAI,IAAI;AACxBH,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,IAApB;AACEP,QAAAA,MAAM,CAACQ,IAAP,CAAYD,IAAI,CAACE,IAAjB;AACH,OAHD;AAIAd,MAAAA,OAAO,CAACK,MAAD,CAAP;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,MAAtB;AACH,KARD,EAQGU,KARH,CAQSC,CAAC,IAAI;AACVC,MAAAA,KAAK,CAACD,CAAD,CAAL;AACH,KAVD;AAWH,GAdQ,EAcN,EAdM,CAAT;AAeE,sBACE;AAAA,2BAEC,QAAC,QAAD;AACC,MAAA,KAAK,EAAE,GADR;AAEC,MAAA,MAAM,EAAE,GAFT;AAGC,MAAA,IAAI,EAAEjB,IAHP;AAIC,MAAA,MAAM,EAAE;AACNmB,QAAAA,GAAG,EAAE,CADC;AAENC,QAAAA,KAAK,EAAE,EAFD;AAGNC,QAAAA,IAAI,EAAE,EAHA;AAINC,QAAAA,MAAM,EAAE;AAJF,OAJT;AAAA,8BAWC,QAAC,aAAD;AAAe,QAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAXD,eAYC,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAZD,eAaC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAbD,eAcC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAdD,eAeC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAfD,eAgBC,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,IAAb;AAAkB,QAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAhBD,eAiBC,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,IAAb;AAAkB,QAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD,mBADF;AAwBD;;GA5CQvB,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["\nimport { LineChart, PieChart, Pie, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area, BarChart, Bar,} from \"recharts\";\nimport { useState,useEffect } from \"react\";\nimport axios from \"axios\";\nimport Histogram from 'react-chart-histogram';\nimport './chart.css'\nfunction App() {\n\nconst [data, setData] = useState([])\nconst labels = [ \"Jan\", \"Feb\", \"March\",\"April\", \"May\", \"June\", \"July\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"]\n  const options = { fillColor: '#FFFFFF', strokeColor: '#0000FF' };\nuseEffect(() => {\n    const salary = [];\n   \n    axios.get(\"http://localhost:3003/task\").then(response =>{\n        console.log(\"response\", response)\n        response.data.map(item => {\n          console.log(\"item\", item)\n            salary.push(item.name);            \n        })\n        setData(salary)\n        console.log(\"salary\", salary)\n    }).catch(e => {\n        alert(e);\n    })\n}, [])\n  return (\n    <>\n     \n     <BarChart\n      width={500}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n      <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n    </BarChart>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}